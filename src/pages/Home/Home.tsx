// import React from "react";
// import styles from "./Home.module.css";
// import { PageWrapper } from "../../shared/PageWrapper";
// import { MenuBlocks } from "./MenuBlocks/MenuBlocks";
// import { PrayerTimes } from "./PrayerTimes/PrayerTimes";
// import { QiblaCompass } from "./QiblaCompass/QiblaCompass";
// import { useGeoStore } from "../../hooks/useGeoStore";
// import { QiblaMap } from "./QiblaCompass/QiblaMap";
// import { Header } from "../../components/header/Header";
// import { t } from "i18next";
// import { useHomeLogic } from "./useHomeLogic";
// import { LoadingSpinner } from "../../components/LoadingSpinner/LoadingSpinner";

// export const Home: React.FC = () => {
//   const {
//     sensorPermission,
//     requestSensorPermission,
//     resetSensorPermission, // –î–æ–±–∞–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é —Å–±—Ä–æ—Å–∞
//     handleCompassClick,
//     handleMapClick,
//     isRequestingPermission,
//     isInitializing,
//     initializationError,
//   } = useHomeLogic();

//   const { isLoading, error } = useGeoStore();

//   // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ª–æ–∞–¥–µ—Ä –≤–æ –≤—Ä–µ–º—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
//   if (isInitializing) {
//     return (
//       <PageWrapper>
//         <div className={styles.loadingContainer}>
//           <LoadingSpinner />
//           <p>{t("initializingApp")}</p>
//         </div>
//       </PageWrapper>
//     );
//   }

//   // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
//   if (initializationError) {
//     return (
//       <PageWrapper>
//         <div className={styles.errorContainer}>
//           <h2>{t("initializationError")}</h2>
//           <p>{initializationError}</p>
//           <button onClick={() => window.location.reload()}>
//             {t("tryAgain")}
//           </button>
//         </div>
//       </PageWrapper>
//     );
//   }

//   return (
//     <PageWrapper>
//       <Header />

//       {/* –ö–Ω–æ–ø–∫–∞ —Å–±—Ä–æ—Å–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è (—Ç–æ–ª—å–∫–æ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏) */}
//       {sensorPermission === "granted" ||
//         (sensorPermission === "denied" && (
//           <button
//             className={styles.resetPermissionButton}
//             onClick={resetSensorPermission}
//             title={t("resetPermissionHint")}
//           >
//             {t("resetPermission")}
//           </button>
//         ))}

//       <div className={styles.homeRoot}>
//         {isLoading && (
//           <div className={styles.loadingContainer}>
//             <LoadingSpinner />
//           </div>
//         )}

//         {error && <div className={styles.errorContainer}>{error}</div>}

//         {!isLoading && !error && (
//           <>
//             <div className={styles.prayerTimesQiblaContainer}>
//               <PrayerTimes />

//               <div className={styles.qiblaBlock}>
//                 <div className={styles.titleFaceKaaba}>{t("faceTheKaaba")}</div>
//                 <div className={styles.diskFaceKaaba}>
//                   {t("useMapForSalah")}
//                 </div>

//                 <div className={styles.qiblaBlockRow}>
//                   <div onClick={handleMapClick} className={styles.mapContainer}>
//                     <QiblaMap
//                       onMapClick={handleMapClick}
//                       showPermissionButton={sensorPermission !== "granted"}
//                       onRequestPermission={requestSensorPermission}
//                       isRequestingPermission={isRequestingPermission}
//                       orientationListenerActive={sensorPermission === "granted"} // –ü–µ—Ä–µ–¥–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
//                     />
//                   </div>

//                   <div
//                     onClick={() => handleCompassClick(sensorPermission)}
//                     className={styles.compassContainer}
//                   >
//                     <QiblaCompass
//                       permissionGranted={sensorPermission === "granted"}
//                     />
//                   </div>
//                 </div>
//               </div>
//               <div className={styles.locationMay}>{t("locationMay")}</div>
//             </div>

//             <MenuBlocks />
//           </>
//         )}
//       </div>
//     </PageWrapper>
//   );
// };


import React, { useState, useEffect } from 'react';

export const Home: React.FC = () => {
  const [isTelegram, setIsTelegram] = useState<boolean>(false);
  const [isLoading, setIsLoading] = useState<boolean>(false);

  useEffect(() => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ Telegram WebApp
    const isTWA = window.Telegram && window.Telegram.WebApp;
    setIsTelegram(!!isTWA);
  }, []);

  const shareStory = async () => {
    if (!isTelegram) {
      alert('–§—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ Telegram');
      return;
    }

    setIsLoading(true);

    try {
      // 1. –°–ø–æ—Å–æ–± —á–µ—Ä–µ–∑ WebApp (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω)
      if (window.Telegram?.WebApp?.showPopup) {
        window.Telegram.WebApp.showPopup({
          title: '–ü—É–±–ª–∏–∫–∞—Ü–∏—è –∏—Å—Ç–æ—Ä–∏–∏',
          message: '–î–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –∏—Å—Ç–æ—Ä–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É "üì∑" –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ Telegram',
          // buttons: [{ type: 'ok' }]
        });
      } 
      // 2. –°–ø–æ—Å–æ–± —á–µ—Ä–µ–∑ –æ—Ç–∫—Ä—ã—Ç–∏–µ –∫–ª–∏–µ–Ω—Ç–∞ Telegram
      else if (window.Telegram?.WebApp?.openTelegramLink) {
        // –û—Ç–∫—Ä—ã–≤–∞–µ–º –≥–ª—É–±–æ–∫—É—é —Å—Å—ã–ª–∫—É –≤ Telegram
        window.Telegram.WebApp.openTelegramLink('https://t.me/share/url?url=https://your-app.com');
      }
      // 3. Fallback - –ø—ã—Ç–∞–µ–º—Å—è –æ—Ç–∫—Ä—ã—Ç—å —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
      else {
        // –≠—Ç–∞ —Å—Å—ã–ª–∫–∞ –æ—Ç–∫—Ä–æ–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å "–ø–æ–¥–µ–ª–∏—Ç—å—Å—è" –≤ Telegram
        const shareUrl = `https://t.me/share/url?url=${encodeURIComponent('https://your-app.com')}&text=${encodeURIComponent('–ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –º–æ—é –∏—Å—Ç–æ—Ä–∏—é!')}`;
        
        if (window.Telegram?.WebApp?.openLink) {
          window.Telegram.WebApp.openLink(shareUrl);
        } else {
          window.open(shareUrl, '_blank');
        }
      }

    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –∏—Å—Ç–æ—Ä–∏–∏:', error);
      alert('–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø—É–±–ª–∏–∫–∞—Ü–∏–∏. –í–æ–∑–º–æ–∂–Ω–æ, —Ñ—É–Ω–∫—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –≤ —ç—Ç–æ–π –≤–µ—Ä—Å–∏–∏ Telegram.');
    } finally {
      setTimeout(() => setIsLoading(false), 2000);
    }
  };

  const handleButtonClick = () => {
    if (isTelegram) {
      shareStory();
    } else {
      alert('–û—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ Telegram –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –∏—Å—Ç–æ—Ä–∏–π');
    }
  };

  // –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–± –¥–ª—è –¥–µ—Å–∫—Ç–æ–ø–Ω—ã—Ö –≤–µ—Ä—Å–∏–π Telegram
  const openTelegramApp = () => {
    // –°—Å—ã–ª–∫–∞ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è Telegram —Å –≥–ª—É–±–æ–∫–æ–π —Å—Å—ã–ª–∫–æ–π
    const tgAppLink = 'tg://resolve?domain=your_bot_username&start=share_story';
    const tgWebLink = 'https://t.me/your_bot_username?start=share_story';
    
    // –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ, –µ—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∏—Ç—Å—è - –æ—Ç–∫—Ä–æ–µ–º –≤–µ–±-–≤–µ—Ä—Å–∏—é
    window.location.href = tgAppLink;
    setTimeout(() => {
      window.location.href = tgWebLink;
    }, 1000);
  };

  return (
    <div style={styles.container}>
      <div style={styles.card}>
        <h2 style={styles.title}>üì± –ò—Å—Ç–æ—Ä–∏–∏</h2>
        
        <div style={styles.feature}>
          <h3 style={styles.featureTitle}>–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã–π –ø–æ–∫–∞–∑</h3>
          <p style={styles.featureText}>–ë–æ–ª—å—à–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ –∑–∞ —Å—á—ë—Ç –ø–æ–∫–∞–∑–∞ –í–∞—à–∏—Ö –∏—Å—Ç–æ—Ä–∏–π –≤ –Ω–∞—á–∞–ª–µ —Å–ø–∏—Å–∫–∞.</p>
        </div>

        <div style={styles.feature}>
          <h3 style={styles.featureTitle}>–†–µ–∂–∏–º –∏–Ω–∫–æ–≥–Ω–∏—Ç–æ</h3>
          <p style={styles.featureText}>–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –∏—Å—Ç–æ—Ä–∏–∏ –∞–Ω–æ–Ω–∏–º–Ω–æ.</p>
        </div>

        <div style={styles.feature}>
          <h3 style={styles.featureTitle}>–£–ª—É—á—à–µ–Ω–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ –≤–∏–¥–µ–æ</h3>
          <p style={styles.featureText}>–ü—Ä–æ—Å–º–æ—Ç—Ä –≤–∏–¥–µ–æ–∏—Å—Ç–æ—Ä–∏–π –≤ —É–¥–≤–æ–µ–Ω–Ω–æ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–∏.</p>
        </div>

        <div style={styles.feature}>
          <h3 style={styles.featureTitle}>–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤</h3>
          <p style={styles.featureText}>–î–æ—Å—Ç—É–ø –∫ —Å–ø–∏—Å–∫—É –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–≤—à–∏—Ö ‚Äî –¥–∞–∂–µ –µ—Å–ª–∏ –∏—Å—Ç–æ—Ä–∏—è –∏—Å—Ç–µ–∫–ª–∞.</p>
        </div>

        <div style={styles.separator}></div>

        <button
          style={isLoading ? { ...styles.button, ...styles.buttonDisabled } : styles.button}
          onClick={handleButtonClick}
          disabled={isLoading}
        >
          {isLoading ? '‚è≥ –ó–∞–≥—Ä—É–∑–∫–∞...' : 'üöÄ –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞'}
        </button>

        {isLoading && <p style={styles.loadingText}>–û—Ç–∫—Ä—ã–≤–∞–µ–º —Ä–µ–¥–∞–∫—Ç–æ—Ä –∏—Å—Ç–æ—Ä–∏–π...</p>}
        
        {!isTelegram && (
          <div style={styles.warningContainer}>
            <p style={styles.warningText}>
              ‚ö†Ô∏è –§—É–Ω–∫—Ü–∏—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –∏—Å—Ç–æ—Ä–∏–π –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ Telegram
            </p>
            <button 
              style={styles.alternativeButton}
              onClick={openTelegramApp}
            >
              üì≤ –û—Ç–∫—Ä—ã—Ç—å –≤ Telegram
            </button>
          </div>
        )}
      </div>
    </div>
  );
};

const styles: { [key: string]: React.CSSProperties } = {
  container: {
    display: 'flex',
    justifyContent: 'center',
    alignItems: 'center',
    minHeight: '100vh',
    backgroundColor: '#f5f5f5',
    padding: '20px',
    fontFamily: '-apple-system, BlinkMacSystemFont, sans-serif',
  },
  card: {
    backgroundColor: 'white',
    borderRadius: '16px',
    padding: '24px',
    boxShadow: '0 4px 20px rgba(0, 0, 0, 0.1)',
    maxWidth: '400px',
    width: '100%',
  },
  title: {
    color: '#333',
    fontSize: '24px',
    fontWeight: 'bold',
    marginBottom: '20px',
    textAlign: 'center',
  },
  feature: {
    marginBottom: '20px',
    padding: '12px',
    backgroundColor: '#f8f9fa',
    borderRadius: '12px',
    border: '1px solid #e9ecef',
  },
  featureTitle: {
    color: '#0088cc',
    fontSize: '16px',
    fontWeight: '600',
    margin: '0 0 8px 0',
  },
  featureText: {
    color: '#666',
    fontSize: '14px',
    margin: '0',
    lineHeight: '1.4',
  },
  separator: {
    height: '1px',
    backgroundColor: '#e0e0e0',
    margin: '20px 0',
  },
  button: {
    width: '100%',
    background: 'linear-gradient(135deg, #0088cc, #00a2e4)',
    color: 'white',
    border: 'none',
    padding: '16px 24px',
    borderRadius: '12px',
    fontSize: '16px',
    fontWeight: '600',
    cursor: 'pointer',
    transition: 'all 0.3s ease',
    boxShadow: '0 4px 12px rgba(0, 136, 204, 0.3)',
    marginBottom: '12px',
  },
  buttonDisabled: {
    background: '#cccccc',
    cursor: 'not-allowed',
    transform: 'none',
    boxShadow: 'none',
  },
  loadingText: {
    color: '#0088cc',
    fontSize: '14px',
    textAlign: 'center',
    margin: '0',
    fontStyle: 'italic',
  },
  warningContainer: {
    marginTop: '15px',
    textAlign: 'center',
  },
  warningText: {
    color: '#ff6b6b',
    fontSize: '14px',
    margin: '0 0 10px 0',
    backgroundColor: '#fff0f0',
    padding: '10px',
    borderRadius: '8px',
    border: '1px solid #ffd6d6',
  },
  alternativeButton: {
    background: '#0088cc',
    color: 'white',
    border: 'none',
    padding: '10px 16px',
    borderRadius: '8px',
    fontSize: '14px',
    cursor: 'pointer',
  },
};

export default Home;